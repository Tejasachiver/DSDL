Collection = Orders



// Map function for summing amount of customers with status P
var mapFunction1 = function() {
    if (this.status === "P") {
        emit(this.cus_id, this.amount);
    }
};

// Reduce function to sum the emitted values
var reduceFunction1 = function(cusId, amounts) {
    return Array.sum(amounts);
};

// Executing Map-Reduce
db.Order.mapReduce(
    mapFunction1,
    reduceFunction1,
    { out: "sum_of_amounts_for_P_status" }
);




// Map function for calculating average amount of each customer
var mapFunction2 = function() {
    emit(this.cus_id, { count: 1, total: this.amount });
};

// Reduce function to calculate average amount
var reduceFunction2 = function(cusId, values) {
    var reducedVal = { count: 0, total: 0 };

    for (var idx = 0; idx < values.length; idx++) {
        reducedVal.count += values[idx].count;
        reducedVal.total += values[idx].total;
    }

    return reducedVal;
};

// Finalize function to compute the average
var finalizeFunction2 = function(cusId, reducedVal) {
    return reducedVal.total / reducedVal.count;
};

// Executing Map-Reduce
db.Order.mapReduce(
    mapFunction2,
    reduceFunction2,
    {
        out: "average_amounts"
        // finalize: finalizeFunction2  // Uncomment this line to use the finalize function
    }
);



// Map function for minimum amount of each customer
var mapFunction3 = function() {
    emit(this.cus_id, this.amount);
};

// Reduce function to find minimum amount
var reduceFunction3 = function(cusId, amounts) {
    return Math.min.apply(null, amounts);
};

// Executing Map-Reduce
db.Order.mapReduce(
    mapFunction3,
    reduceFunction3,
    { out: "min_amounts" }
);



// Map function for maximum amount of customers with status F
var mapFunction4 = function() {
    if (this.status === "F") {
        emit(this.cus_id, this.amount);
    }
};

// Reduce function to find maximum amount
var reduceFunction4 = function(cusId, amounts) {
    return Math.max.apply(null, amounts);
};

// Executing Map-Reduce
db.Order.mapReduce(
    mapFunction4,
    reduceFunction4,
    { out: "max_amounts_for_F_status" }
);

